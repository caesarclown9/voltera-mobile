import { useState } from "react";
import { useSignUp } from "../hooks/useAuth";

interface SignUpFormProps {
  onSuccess: () => void;
  onSwitchToSignIn: () => void;
}

export function SignUpForm({ onSuccess, onSwitchToSignIn }: SignUpFormProps) {
  const [email, setEmail] = useState("");
  // –ê–≤—Ç–æ–ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–∞: +996. –ü–æ–ª–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—á–∏—â–∞–µ—Ç—Å—è –Ω–∏–∂–µ —ç—Ç–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞
  const [phone, setPhone] = useState("+996");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [ageConfirmed, setAgeConfirmed] = useState(false);

  const signUpMutation = useSignUp();

  const validateEmail = (email: string) => {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
  };

  const validatePhone = (phone: string) => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å + –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç 10-15 —Ü–∏—Ñ—Ä)
    const re = /^\+\d{10,15}$/;
    return re.test(phone.replace(/\s/g, ""));
  };

  const handlePhoneChange = (value: string) => {
    // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –Ω–∞–≤—è–∑—ã–≤–∞–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã 996
    const digitsOnly = value.replace(/\D/g, "");
    const withKGPrefix = digitsOnly.startsWith("996")
      ? digitsOnly
      : `996${digitsOnly}`;
    // –û–≥—Ä–∞–Ω–∏—á–∏–º –æ–±—â—É—é –¥–ª–∏–Ω—É –Ω–æ–º–µ—Ä–∞: +996 –∏ –¥–æ 9 —Ü–∏—Ñ—Ä (—Å—Ç–∞–Ω–¥–∞—Ä—Ç KG)
    const limited = withKGPrefix.slice(0, 12); // 3 (–∫–æ–¥) + 9 —Ü–∏—Ñ—Ä = 12
    setPhone(`+${limited}`);
  };

  const isValid =
    validateEmail(email) &&
    validatePhone(phone) &&
    password.length >= 6 &&
    password === confirmPassword &&
    ageConfirmed;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!isValid) return;

    try {
      const result = await signUpMutation.mutateAsync({
        email,
        phone,
        password,
      });
      if (result.success) {
        onSuccess();
      }
    } catch {
      // –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –º—É—Ç–∞—Ü–∏–∏
    }
  };

  return (
    <div className="bg-white rounded-2xl shadow-xl p-8 max-w-md mx-auto">
      <div className="text-center mb-8">
        <div className="flex items-center justify-center mx-auto mb-4">
          <img
            src="/icons/voltera-logo-horizontal.png"
            alt="Voltera"
            className="h-16 w-auto"
          />
        </div>
        <h2 className="text-2xl font-bold text-gray-900 mb-2">
          –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ Voltera
        </h2>
        <p className="text-gray-600">–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç</p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-5">
        <div>
          <label
            htmlFor="signup-email"
            className="block text-sm font-medium text-gray-700 mb-2"
          >
            Email
          </label>
          <input
            type="email"
            id="signup-email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className={`w-full px-4 py-3 rounded-xl border ${
              email && !validateEmail(email)
                ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                : "border-gray-300 focus:border-green-500 focus:ring-green-500"
            } focus:outline-none focus:ring-2 text-gray-900 placeholder-gray-400`}
            placeholder="example@mail.com"
            required
          />
          {email && !validateEmail(email) && (
            <p className="mt-1 text-sm text-red-600">
              –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email
            </p>
          )}
        </div>

        <div>
          <label
            htmlFor="signup-phone"
            className="block text-sm font-medium text-gray-700 mb-2"
          >
            –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
          </label>
          <input
            type="tel"
            id="signup-phone"
            value={phone}
            onChange={(e) => handlePhoneChange(e.target.value)}
            onFocus={() => {
              if (!phone || phone === "+") setPhone("+996");
            }}
            className={`w-full px-4 py-3 rounded-xl border ${
              phone && !validatePhone(phone)
                ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                : "border-gray-300 focus:border-green-500 focus:ring-green-500"
            } focus:outline-none focus:ring-2 text-gray-900 placeholder-gray-400`}
            placeholder="+996 XXX XXX XXX"
            required
          />
          {phone && !validatePhone(phone) && (
            <p className="mt-1 text-sm text-red-600">
              –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: +996500123456)
            </p>
          )}
        </div>

        {/* Captcha –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é. */}

        <div>
          <label
            htmlFor="signup-password"
            className="block text-sm font-medium text-gray-700 mb-2"
          >
            –ü–∞—Ä–æ–ª—å
          </label>
          <div className="relative">
            <input
              type={showPassword ? "text" : "password"}
              id="signup-password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className={`w-full px-4 py-3 rounded-xl border ${
                password && password.length < 6
                  ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                  : "border-gray-300 focus:border-green-500 focus:ring-green-500"
              } focus:outline-none focus:ring-2 text-gray-900 placeholder-gray-400 pr-12`}
              placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
              minLength={6}
              required
            />
            <button
              type="button"
              onClick={() => setShowPassword(!showPassword)}
              className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700"
            >
              {showPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è"}
            </button>
          </div>
          {password && password.length < 6 && (
            <p className="mt-1 text-sm text-red-600">
              –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤
            </p>
          )}
        </div>

        <div>
          <label
            htmlFor="signup-confirmPassword"
            className="block text-sm font-medium text-gray-700 mb-2"
          >
            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å
          </label>
          <input
            type={showPassword ? "text" : "password"}
            id="signup-confirmPassword"
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
            className={`w-full px-4 py-3 rounded-xl border ${
              confirmPassword && password !== confirmPassword
                ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                : "border-gray-300 focus:border-green-500 focus:ring-green-500"
            } focus:outline-none focus:ring-2 text-gray-900 placeholder-gray-400`}
            placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            required
          />
          {confirmPassword && password !== confirmPassword && (
            <p className="mt-1 text-sm text-red-600">–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç</p>
          )}
        </div>

        {/* Age Confirmation (18+) - Required by Google Play */}
        <div className="pt-2">
          <label className="flex items-start gap-3 cursor-pointer group">
            <input
              type="checkbox"
              checked={ageConfirmed}
              onChange={(e) => setAgeConfirmed(e.target.checked)}
              className="mt-1 w-5 h-5 rounded border-gray-300 text-green-600 focus:ring-green-500 focus:ring-2 cursor-pointer"
              required
            />
            <span className="text-sm text-gray-700 select-none">
              –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –º–Ω–µ –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å{" "}
              <span className="font-semibold text-gray-900">18 –ª–µ—Ç</span> –∏ —è
              –ø—Ä–∏–Ω–∏–º–∞—é{" "}
              <a
                href="/legal/terms.html"
                target="_blank"
                rel="noopener noreferrer"
                className="text-cyan-600 hover:text-cyan-700 underline"
                onClick={(e) => e.stopPropagation()}
              >
                –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
              </a>{" "}
              –∏{" "}
              <a
                href="/legal/privacy.html"
                target="_blank"
                rel="noopener noreferrer"
                className="text-cyan-600 hover:text-cyan-700 underline"
                onClick={(e) => e.stopPropagation()}
              >
                –ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
              </a>
            </span>
          </label>
        </div>

        <button
          type="submit"
          className="w-full bg-gradient-to-r from-green-500 to-cyan-500 text-white py-3 rounded-xl font-semibold hover:shadow-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed"
          disabled={!isValid || signUpMutation.isPending}
        >
          {signUpMutation.isPending ? (
            <div className="flex items-center justify-center">
              <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...
            </div>
          ) : (
            "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"
          )}
        </button>
      </form>

      <div className="mt-4 text-center">
        <p className="text-sm text-gray-500">
          –£–∂–µ –µ—Å—Ç—å —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å?{" "}
          <button
            type="button"
            onClick={onSwitchToSignIn}
            className="text-cyan-600 hover:text-cyan-700 font-medium underline"
          >
            –í–æ–π—Ç–∏
          </button>
        </p>
      </div>

      {signUpMutation.error && (
        <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded-md">
          <p className="text-sm text-red-600">
            {signUpMutation.error instanceof Error &&
            signUpMutation.error.message
              ? `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${signUpMutation.error.message}`
              : "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ—Ç email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è."}
          </p>
        </div>
      )}
    </div>
  );
}
